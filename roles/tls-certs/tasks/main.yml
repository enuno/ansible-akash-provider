---
- name: Add cert-manager Helm repo
  community.kubernetes.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
  when: not cert_manager_installed.stat.exists

- name: Install cert-manager
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_version }}"
    release_namespace: cert-manager
    create_namespace: true
    set:
      installCRDs: true
      global.leaderElection.namespace: cert-manager

- name: Create Cloudflare API secret
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cloudflare-api-token
        namespace: cert-manager
      type: Opaque
      stringData:
        api-token: "{{ cloudflare_api_token }}"
  no_log: true

- name: Deploy Let's Encrypt ClusterIssuer
  kubernetes.core.k8s:
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: "{{ letsencrypt_issuer_name }}"
      spec:
        acme:
          server: "{{ letsencrypt_server }}"
          email: "{{ letsencrypt_email }}"
          privateKeySecretRef:
            name: "{{ letsencrypt_issuer_name }}-key"
          solvers:
          - dns01:
              cloudflare:
                email: "{{ cloudflare_account_email }}"
                apiTokenSecretRef:
                  name: cloudflare-api-token
                  key: api-token

- name: Create Akash Provider Certificate
  kubernetes.core.k8s:
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: akash-provider-tls
        namespace: "{{ akash_namespace }}"
      spec:
        secretName: akash-provider-tls
        issuerRef:
          name: "{{ letsencrypt_issuer_name }}"
          kind: ClusterIssuer
        dnsNames:
        - "{{ provider_fqdn }}"
        duration: "{{ tls_cert_duration }}"
        renewBefore: "{{ tls_cert_renew_before }}"
